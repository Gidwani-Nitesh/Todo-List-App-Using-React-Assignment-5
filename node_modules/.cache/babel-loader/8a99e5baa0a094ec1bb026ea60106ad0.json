{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nitesh Gidwani\\\\Downloads\\\\react-todo-app-v1-master (1)\\\\react-todo-app-v1-master\\\\src\\\\components\\\\Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport { MdAdd } from \"react-icons/md\";\nimport { RiCloseCircleLine } from \"react-icons/ri\";\nimport { TiEdit } from \"react-icons/ti\";\nimport \"./Todo.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Todo = _ref => {\n  _s();\n\n  let {\n    todos,\n    completeTodo,\n    removeTodo,\n    updateTodo\n  } = _ref;\n  const [edit, setEdit] = useState({\n    id: null,\n    value: \"\"\n  });\n\n  const submitUpdate = value => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: \"\"\n    });\n  };\n\n  if (edit.id) {\n    return /*#__PURE__*/_jsxDEV(TodoForm, {\n      edit: edit,\n      onSubmit: submitUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n\n  return todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: todo.isComplete ? \"todo-row complete\" : \"todo-row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-responsive\",\n      children: todo.text\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icons\",\n      children: [/*#__PURE__*/_jsxDEV(MdAdd, {\n        onClick: () => completeTodo(todo.id),\n        className: \"delete-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RiCloseCircleLine, {\n        onClick: () => removeTodo(todo.id),\n        className: \"delete-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TiEdit, {\n        onClick: () => setEdit({\n          id: todo.id,\n          value: todo.text\n        }),\n        className: \"edit-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this));\n};\n\n_s(Todo, \"DJZiNdvmL+6jjh34b/0zH6N4WRE=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useState","TodoForm","MdAdd","RiCloseCircleLine","TiEdit","Todo","todos","completeTodo","removeTodo","updateTodo","edit","setEdit","id","value","submitUpdate","map","todo","index","isComplete","text"],"sources":["C:/Users/Nitesh Gidwani/Downloads/react-todo-app-v1-master (1)/react-todo-app-v1-master/src/components/Todo.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport { MdAdd } from \"react-icons/md\";\nimport { RiCloseCircleLine } from \"react-icons/ri\";\nimport { TiEdit } from \"react-icons/ti\";\nimport \"./Todo.css\";\n\nconst Todo = ({ todos, completeTodo, removeTodo, updateTodo }) => {\n  const [edit, setEdit] = useState({\n    id: null,\n    value: \"\",\n  });\n\n  const submitUpdate = (value) => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: \"\",\n    });\n  };\n\n  if (edit.id) {\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\n  }\n\n  return todos.map((todo, index) => (\n    <div\n      className={todo.isComplete ? \"todo-row complete\" : \"todo-row\"}\n      key={index}\n    >\n      <div className=\"text-responsive\" key={todo.id}>\n        {todo.text}\n      </div>\n      <div className=\"icons\">\n        <MdAdd onClick={() => completeTodo(todo.id)} \n        className=\"delete-icon\" />\n        <RiCloseCircleLine\n          onClick={() => removeTodo(todo.id)}\n          className=\"delete-icon\"\n        />\n        <TiEdit\n          onClick={() => setEdit({ id: todo.id, value: todo.text })}\n          className=\"edit-icon\"\n        />\n      </div>\n    </div>\n  ));\n};\n\nexport default Todo;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,OAAO,YAAP;;;AAEA,MAAMC,IAAI,GAAG,QAAqD;EAAA;;EAAA,IAApD;IAAEC,KAAF;IAASC,YAAT;IAAuBC,UAAvB;IAAmCC;EAAnC,CAAoD;EAChE,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC;IAC/BY,EAAE,EAAE,IAD2B;IAE/BC,KAAK,EAAE;EAFwB,CAAD,CAAhC;;EAKA,MAAMC,YAAY,GAAID,KAAD,IAAW;IAC9BJ,UAAU,CAACC,IAAI,CAACE,EAAN,EAAUC,KAAV,CAAV;IACAF,OAAO,CAAC;MACNC,EAAE,EAAE,IADE;MAENC,KAAK,EAAE;IAFD,CAAD,CAAP;EAID,CAND;;EAQA,IAAIH,IAAI,CAACE,EAAT,EAAa;IACX,oBAAO,QAAC,QAAD;MAAU,IAAI,EAAEF,IAAhB;MAAsB,QAAQ,EAAEI;IAAhC;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,OAAOR,KAAK,CAACS,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACf;IACE,SAAS,EAAED,IAAI,CAACE,UAAL,GAAkB,mBAAlB,GAAwC,UADrD;IAAA,wBAIE;MAAK,SAAS,EAAC,iBAAf;MAAA,UACGF,IAAI,CAACG;IADR,GAAsCH,IAAI,CAACJ,EAA3C;MAAA;MAAA;MAAA;IAAA,QAJF,eAOE;MAAK,SAAS,EAAC,OAAf;MAAA,wBACE,QAAC,KAAD;QAAO,OAAO,EAAE,MAAML,YAAY,CAACS,IAAI,CAACJ,EAAN,CAAlC;QACA,SAAS,EAAC;MADV;QAAA;QAAA;QAAA;MAAA,QADF,eAGE,QAAC,iBAAD;QACE,OAAO,EAAE,MAAMJ,UAAU,CAACQ,IAAI,CAACJ,EAAN,CAD3B;QAEE,SAAS,EAAC;MAFZ;QAAA;QAAA;QAAA;MAAA,QAHF,eAOE,QAAC,MAAD;QACE,OAAO,EAAE,MAAMD,OAAO,CAAC;UAAEC,EAAE,EAAEI,IAAI,CAACJ,EAAX;UAAeC,KAAK,EAAEG,IAAI,CAACG;QAA3B,CAAD,CADxB;QAEE,SAAS,EAAC;MAFZ;QAAA;QAAA;QAAA;MAAA,QAPF;IAAA;MAAA;MAAA;MAAA;IAAA,QAPF;EAAA,GAEOF,KAFP;IAAA;IAAA;IAAA;EAAA,QADK,CAAP;AAsBD,CAxCD;;GAAMZ,I;;KAAAA,I;AA0CN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}